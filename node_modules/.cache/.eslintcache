[{"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\index.js":"1","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\App.js":"2","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\FooterComponent.js":"3","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\HeaderComponent.js":"4","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\AddTodoItemComponent.js":"5","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\ListTodoItemComponent.js":"6","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\service\\TodoItemService.js":"7"},{"size":301,"mtime":1681457469213,"results":"8","hashOfConfig":"9"},{"size":852,"mtime":1681463254823,"results":"10","hashOfConfig":"9"},{"size":307,"mtime":1681466712110,"results":"11","hashOfConfig":"9"},{"size":426,"mtime":1681462103464,"results":"12","hashOfConfig":"9"},{"size":3532,"mtime":1681464385106,"results":"13","hashOfConfig":"9"},{"size":2175,"mtime":1681976260119,"results":"14","hashOfConfig":"9"},{"size":560,"mtime":1681473499660,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"6z6f3m",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\index.js",[],[],[],"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\App.js",[],[],"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\FooterComponent.js",[],[],"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\HeaderComponent.js",["40"],[],"import React from 'react'\n\nconst HeaderComponent = () => {\n    return (\n        <div>\n            <header>\n                <nav className='navbar navbar-expand-md navbar-dark bg-dark p-3'>\n                    <div>\n                        <a className='navbar-brand m-5' href=\"\">Todo Application</a>\n                    </div>\n                </nav>\n            </header>\n        </div>\n    )\n}\n\nexport default HeaderComponent","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\AddTodoItemComponent.js",["41","42"],[],"import React, { useState, useEffect } from 'react'\nimport TodoItemService from '../service/TodoItemService';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nconst AddTodoItemComponent = () => {\n    const [task, setTask] = useState('');\n    const [overview, setOverview] = useState('');\n    const [notes, setNotes] = useState('');\n    const navigate = useNavigate();\n    const { id } = useParams();\n\n    const todoItemData = { task, overview, notes };\n\n    function saveTodoItem(e) {\n        e.preventDefault();\n\n        if (todoItemData.task !== \"\" && todoItemData.overview !== \"\" && todoItemData.notes != \"\") {\n            if (id) {\n                TodoItemService.updateTodoItem(id, todoItemData)\n                    .then(navigate(\"/todo-item\"))\n                    .catch(e => console.log(e));\n            } else {\n                TodoItemService.saveTodoItem(todoItemData)\n                    .then(navigate(\"/todo-item\"))\n                    .catch(e => console.log(e));\n            }\n\n        } else {\n            alert(\"Please Note! All inputs required!\");\n        }\n    }\n\n    function tile() {\n        if (id) {\n            return \"Update TodoItem\";\n        } else {\n            return \"Add TodoItem\";\n        }\n    }\n    useEffect(() => {\n        if (id) {\n            TodoItemService.getTodoItemById(id)\n                .then(res => {\n                    setTask(res.data.task);\n                    setOverview(res.data.overview);\n                    setNotes(res.data.notes);\n                })\n                .catch(e => console.log(e));\n        }\n    }, []);\n\n    return (\n        <div>\n            <div className='container mt-5'>\n                <div className='row'>\n                    <div className='card col-md-6 offset-md-3'>\n                        <h2 className='text-center'>{tile()}</h2>\n                        <div className='card-body'>\n                            <form>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={task}\n                                        onChange={(e) => setTask(e.target.value)}\n                                        type=\"text\" placeholder='Add Task Details' />\n                                </div>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={overview}\n                                        onChange={(e) => setOverview(e.target.value)}\n                                        type=\"text\" placeholder='Add Overview Details' />\n                                </div>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={notes}\n                                        onChange={(e) => setNotes(e.target.value)}\n                                        type=\"notes\" placeholder='Add Notes' />\n                                </div>\n                                <button onClick={(e) => saveTodoItem(e)} className='btn btn-success'>Save</button> {\" \"}\n                                <Link to={\"/todo-item\"} className='btn btn-danger' href=\"\">Cancel</Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTodoItemComponent","C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\component\\ListTodoItemComponent.js",["43","44"],[],"C:\\Users\\hllyl\\visual-studio-code-workspaces\\todo-app-client\\src\\service\\TodoItemService.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":9,"column":25,"nodeType":"47","endLine":9,"endColumn":65},{"ruleId":"48","severity":1,"message":"49","line":17,"column":92,"nodeType":"50","messageId":"51","endLine":17,"endColumn":94},{"ruleId":"52","severity":1,"message":"53","line":50,"column":8,"nodeType":"54","endLine":50,"endColumn":10,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"60","line":46,"column":33,"nodeType":"47","endLine":46,"endColumn":111},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"62","fix":"63"},"Update the dependencies array to be: [id]",{"range":"64","text":"65"},[1588,1590],"[id]"]